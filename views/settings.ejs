<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QuickQuizzer - Settings</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="icon" href="images/icon.ico" type="image/x-icon">
    <style>
        .error-message {
            color: red;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
        .error-border {
            border: 2px solid red !important;
        }
    </style>
</head>
<body>
<%- include('partials/navbar', { userID: userID, username: username, profilePicture: profilePicture }) %>
<main>
    <div class="settings-container">
        <h1>Settings</h1>

        <!-- Profile Picture Section -->
        <div class="settings-section">
            <h2>Profile Picture</h2>
            <div class="profile-picture-upload">
                <div class="profile-img-container">
                    <img src="<%= profilePicture || '/images/profile.png' %>" alt="Profile Picture" class="profile-img">
                    <div class="upload-overlay">
                        <label for="profile-picture-upload" class="upload-label">Change</label>
                        <input type="file" id="profile-picture-upload" accept="image/*" style="display: none;">
                    </div>
                </div>
            </div>
        </div>

        <!-- Change Email Section -->
        <div class="settings-section">
            <h2>Change Email</h2>
            <form id="change-email-form">
                <div class="form-group">
                    <label for="new-email">New Email</label>
                    <input type="email" id="new-email" name="new-email" required>
                    <div id="email-error" class="error-message">Invalid email format. Example: user@example.com</div>
                </div>
                <button type="submit" class="submit-button">Update Email</button>
            </form>
            <p id="email-success" class="success-message" style="color: green; display: none;">Email updated successfully!</p>
        </div>

        <!-- Change Phone Number Section -->
        <div class="settings-section">
            <h2>Change Phone Number</h2>
            <form id="change-phone-form">
                <div class="form-group">
                    <label for="new-phone">New Phone Number</label>
                    <input type="tel" id="new-phone" name="new-phone" required>
                    <div id="phone-error" class="error-message">Invalid phone number format. Example: +1234567890</div>
                </div>
                <button type="submit" class="submit-button">Update Phone Number</button>
            </form>
            <p id="phone-success" class="success-message" style="color: green; display: none;">Phone number updated successfully!</p>
        </div>

        <!-- Change Password Section -->
        <div class="settings-section">
            <h2>Change Password</h2>
            <form id="change-password-form">
                <div class="form-group">
                    <label for="current-password">Current Password</label>
                    <input type="password" id="current-password" name="current-password" required>
                    <div id="current-password-error" class="error-message">Current password is incorrect.</div>
                </div>
                <div class="form-group">
                    <label for="new-password">New Password</label>
                    <input type="password" id="new-password" name="new-password" required>
                    <div id="new-password-error" class="error-message">New password must be at least 8 characters long.</div>
                </div>
                <div class="form-group">
                    <label for="confirm-password">Confirm New Password</label>
                    <input type="password" id="confirm-password" name="confirm-password" required>
                    <div id="confirm-password-error" class="error-message">Passwords do not match.</div>
                </div>
                <button type="submit" class="submit-button">Update Password</button>
            </form>
            <p id="password-success" class="success-message" style="color: green; display: none;">Password changed successfully!</p>
        </div>
    </div>
</main>
<%- include('partials/footer') %>

<script>
    document.getElementById('profile-picture-upload').addEventListener('change', async (event) => {
        const file = event.target.files[0];
        if (!file) return;

        const formData = new FormData();
        formData.append('profilePicture', file);

        try {
            const response = await fetch('/update-profile-picture', {
                method: 'POST',
                body: formData,
            });

            const data = await response.json();
            if (data.profilePictureUrl) {
                document.querySelector('.profile-img').src = data.profilePictureUrl;
                location.reload();
            }
        } catch (error) {
            console.error('Error uploading profile picture:', error);
        }
    });

    document.getElementById('change-email-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const newEmail = document.getElementById('new-email').value;
        const emailError = document.getElementById('email-error');

        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(newEmail)) {
            emailError.style.display = 'block';
            document.getElementById('new-email').classList.add('error-border');
            return;
        } else {
            emailError.style.display = 'none';
            document.getElementById('new-email').classList.remove('error-border');
        }

        try {
            const response = await fetch('/update-email', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ newEmail }),
            });

            const data = await response.json();
            if (data.success) {
                document.getElementById('new-email').value = '';
                document.getElementById('email-success').style.display = 'block';
                setTimeout(() => document.getElementById('email-success').style.display = 'none', 3000);
            } else {
                emailError.textContent = data.error || "Failed to update email.";
                emailError.style.display = 'block';
                document.getElementById('new-email').classList.add('error-border');
            }
        } catch (error) {
            console.error('Error updating email:', error);
        }
    });

    document.getElementById('change-phone-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const newPhone = document.getElementById('new-phone').value;
        const phoneError = document.getElementById('phone-error');

        const phoneRegex = /^\+?[0-9\s()]{10,15}$/;
        if (!phoneRegex.test(newPhone)) {
            phoneError.style.display = 'block';
            document.getElementById('new-phone').classList.add('error-border');
            return;
        } else {
            phoneError.style.display = 'none';
            document.getElementById('new-phone').classList.remove('error-border');
        }

        try {
            const response = await fetch('/update-phone', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ newPhone }),
            });

            const data = await response.json();
            if (data.success) {
                document.getElementById('new-phone').value = '';
                document.getElementById('phone-success').style.display = 'block';
                setTimeout(() => document.getElementById('phone-success').style.display = 'none', 3000);
            } else {
                phoneError.textContent = data.error || "Failed to update phone number.";
                phoneError.style.display = 'block';
                document.getElementById('new-phone').classList.add('error-border');
            }
        } catch (error) {
            console.error('Error updating phone number:', error);
        }
    });

    document.getElementById('change-password-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        const currentPassword = document.getElementById('current-password').value;
        const newPassword = document.getElementById('new-password').value;
        const confirmPassword = document.getElementById('confirm-password').value;

        const currentPasswordError = document.getElementById('current-password-error');
        const newPasswordError = document.getElementById('new-password-error');
        const confirmPasswordError = document.getElementById('confirm-password-error');

        currentPasswordError.style.display = 'none';
        newPasswordError.style.display = 'none';
        confirmPasswordError.style.display = 'none';
        document.getElementById('current-password').classList.remove('error-border');
        document.getElementById('new-password').classList.remove('error-border');
        document.getElementById('confirm-password').classList.remove('error-border');

        if (newPassword !== confirmPassword) {
            confirmPasswordError.textContent = "Passwords do not match.";
            confirmPasswordError.style.display = 'block';
            document.getElementById('confirm-password').classList.add('error-border');
            return;
        }

        try {
            const response = await fetch('/update-password', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ currentPassword, newPassword, confirmPassword }),
            });

            const data = await response.json();
            if (data.success) {
                document.getElementById('current-password').value = '';
                document.getElementById('new-password').value = '';
                document.getElementById('confirm-password').value = '';

                document.getElementById('password-success').style.display = 'block';
                setTimeout(() => document.getElementById('password-success').style.display = 'none', 3000);
            } else {
                if (data.error === "Current password is incorrect") {
                    currentPasswordError.style.display = 'block';
                    document.getElementById('current-password').classList.add('error-border');
                } else {
                    alert(data.error || "Failed to update password.");
                }
            }
        } catch (error) {
            console.error('Error updating password:', error);
        }
    });
</script>
</body>
</html>